// <auto-generated />
using System;
using CodeFirtMigration.DataFE;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CodeFirtMigration.Migrations
{
    [DbContext(typeof(ContextFE))]
    [Migration("20230626140120_TXTCloud")]
    partial class TXTCloud
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AppUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AppUserTokens");
                });

            modelBuilder.Entity("TDTSettingTable.AreaMaster", b =>
                {
                    b.Property<string>("CompanyCode")
                        .HasMaxLength(10)
                        .HasColumnType("Nvarchar(10)");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("Nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("Nvarchar(20)");

                    b.HasKey("CompanyCode");

                    b.ToTable("AreaMasters");

                    b.HasData(
                        new
                        {
                            CompanyCode = "10000005",
                            AreaCode = "10001",
                            Description = "Việt Nam - Tp.Hcm"
                        });
                });

            modelBuilder.Entity("TDTSettingTable.Author", b =>
                {
                    b.Property<string>("AuthorID")
                        .HasMaxLength(26)
                        .HasColumnType("varchar(26)");

                    b.Property<DateTime?>("Birthday")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("ContentLastUpdateDate")
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Nvarchar(250)");

                    b.Property<DateTime?>("HeadquartersLastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hometown")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameAuthor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.Property<int>("TotalBook")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorID");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("TDTSettingTable.BankSuports", b =>
                {
                    b.Property<string>("BankID")
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.Property<string>("Content")
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Nvarchar(250)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlImageBank")
                        .IsRequired()
                        .HasColumnType("Nvarchar(MAX)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BankID");

                    b.ToTable("BankSuports");
                });

            modelBuilder.Entity("TDTSettingTable.CategoryItemMaster", b =>
                {
                    b.Property<string>("CategoryItemMasterID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContentLastUpdateDate")
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<DateTime?>("HeadquartersLastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("JobID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryItemMasterID");

                    b.ToTable("CategoryItemMasters");
                });

            modelBuilder.Entity("TDTSettingTable.Citys", b =>
                {
                    b.Property<string>("CityID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("AreaCode")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Nvarchar(250)");

                    b.Property<DateTime?>("HeadquartersLastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityID");

                    b.ToTable("Citys");
                });

            modelBuilder.Entity("TDTSettingTable.Customer", b =>
                {
                    b.Property<Guid>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateRegiter")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionLastUpdateDate")
                        .HasMaxLength(400)
                        .HasColumnType("Nvarchar(400)");

                    b.Property<string>("DetailAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Nvarchar(250)");

                    b.Property<string>("DistrictID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.Property<string>("GenderID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarriageID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("StatusAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("Vip")
                        .HasColumnType("bit");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TDTSettingTable.CustomerAddressOrders", b =>
                {
                    b.Property<Guid>("CustomerAddressOrdersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateRegiter")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Nvarchar(200)");

                    b.Property<string>("DistrictID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAddressDefaul")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAddressHome")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<decimal>("ShipPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CustomerAddressOrdersID");

                    b.ToTable("CustomerAddressOrders");
                });

            modelBuilder.Entity("TDTSettingTable.CustomerCart", b =>
                {
                    b.Property<Guid>("CartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAddPrtoduct")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PercentReduction")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceOrigin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusProduct")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CartID");

                    b.ToTable("CustomerCarts");
                });

            modelBuilder.Entity("TDTSettingTable.CustomerReview", b =>
                {
                    b.Property<Guid>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Like")
                        .HasColumnType("int");

                    b.Property<int>("QuantityProductsPurchased")
                        .HasColumnType("int");

                    b.Property<string>("SatisfactionLevelID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartReview")
                        .HasColumnType("int");

                    b.HasKey("ReviewID");

                    b.ToTable("CustomerReviews");
                });

            modelBuilder.Entity("TDTSettingTable.CustomerWallet", b =>
                {
                    b.Property<string>("WalletID")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("BlockDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("Nvarchar(500)");

                    b.Property<DateTime>("FirstDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PointCurent")
                        .HasColumnType("int");

                    b.Property<int>("PointMax")
                        .HasColumnType("int");

                    b.Property<int>("PointMinusLastUpdate")
                        .HasColumnType("int");

                    b.Property<int>("PointPlusLastUpdate")
                        .HasColumnType("int");

                    b.Property<bool>("SatusPointLastUpdate")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusWallet")
                        .HasColumnType("bit");

                    b.HasKey("WalletID");

                    b.ToTable("CustomerWallets");
                });

            modelBuilder.Entity("TDTSettingTable.Districts", b =>
                {
                    b.Property<string>("DistrictID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCreate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HeadquartersLastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LasUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PriceShip")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceShipNew")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistrictID");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("TDTSettingTable.FreeShipProgram", b =>
                {
                    b.Property<string>("FreeShipProgramID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("Nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Nvarchar(200)");

                    b.Property<DateTime>("EndApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FreeShipProgramID");

                    b.ToTable("FreeShipPrograms");
                });

            modelBuilder.Entity("TDTSettingTable.Gender", b =>
                {
                    b.Property<string>("GenderID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("Nvarchar(20)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LasUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderID");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderID = "0001",
                            CreateDate = new DateTime(2023, 6, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Nam",
                            IsDeleteFlag = false
                        },
                        new
                        {
                            GenderID = "0002",
                            CreateDate = new DateTime(2023, 6, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Nữ",
                            IsDeleteFlag = false
                        },
                        new
                        {
                            GenderID = "0003",
                            CreateDate = new DateTime(2023, 6, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Chưa rỏ",
                            IsDeleteFlag = false
                        });
                });

            modelBuilder.Entity("TDTSettingTable.HistoryWallet", b =>
                {
                    b.Property<Guid>("HistoryWalletID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<bool>("IncreaseOrDecrease")
                        .HasColumnType("bit");

                    b.Property<int?>("MethodsReceivingPoints")
                        .HasColumnType("int");

                    b.Property<int>("PointsReceived")
                        .HasColumnType("int");

                    b.Property<string>("WalletID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoryWalletID");

                    b.ToTable("HistoryWallets");
                });

            modelBuilder.Entity("TDTSettingTable.ImageItemMaster", b =>
                {
                    b.Property<Guid>("ImageItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameImage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Url")
                        .HasColumnType("Nvarchar(MAX)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageItemID");

                    b.ToTable("ImageItemMasters");
                });

            modelBuilder.Entity("TDTSettingTable.ImageReview", b =>
                {
                    b.Property<Guid>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<Guid>("ReviewID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeImage")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageID");

                    b.ToTable("ImageReviews");
                });

            modelBuilder.Entity("TDTSettingTable.IssuingCompany", b =>
                {
                    b.Property<string>("IssuingCompanyID")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Nvarchar(250)");

                    b.Property<string>("ContentLastUpdateDate")
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfIncorporation")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<DateTime?>("HeadquartersLastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaxCode")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IssuingCompanyID");

                    b.ToTable("IssuingCompanys");
                });

            modelBuilder.Entity("TDTSettingTable.ItemMaster", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<DateTime?>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuthorID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Buy")
                        .HasColumnType("int");

                    b.Property<string>("CategoryItemMasterID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("Nvarchar(10)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.Property<string>("DescriptionLong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("DescriptionShort")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("Nvarchar(25)");

                    b.Property<DateTime?>("HeadquartersLastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<string>("IssuingCompanyID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageNumber")
                        .HasColumnType("int");

                    b.Property<string>("PairDiscountID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PercentDiscount")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceOrigin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PublishingCompanyID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("QuantityDiscountID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialDiscountID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasColumnType("Nvarchar(10)");

                    b.Property<string>("TaxGroupCodeID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Viewer")
                        .HasColumnType("int");

                    b.Property<decimal>("priceSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("size")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.HasKey("ItemCode");

                    b.ToTable("ItemMasters");
                });

            modelBuilder.Entity("TDTSettingTable.Job", b =>
                {
                    b.Property<string>("JobID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Nvarchar(250)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LasUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobID");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("TDTSettingTable.Marriage", b =>
                {
                    b.Property<string>("MarriageID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Nvarchar(250)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LasUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarriageID");

                    b.ToTable("Marriages");

                    b.HasData(
                        new
                        {
                            MarriageID = "0001",
                            CreateDate = new DateTime(2023, 6, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Độc thân",
                            IsDeleteFlag = false
                        },
                        new
                        {
                            MarriageID = "0002",
                            CreateDate = new DateTime(2023, 6, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Đã kết hôn",
                            IsDeleteFlag = false
                        },
                        new
                        {
                            MarriageID = "0003",
                            CreateDate = new DateTime(2023, 6, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Đã ly dị",
                            IsDeleteFlag = false
                        });
                });

            modelBuilder.Entity("TDTSettingTable.Orders", b =>
                {
                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddressOrdersID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateTimeCustomerGetItem")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("Nvarchar(250)");

                    b.Property<string>("DistrictID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstimatedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FreeShipProgram")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("Nvarchar(500)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentMethodID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ReceiptStatusID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceiveApplication")
                        .HasColumnType("bit");

                    b.Property<decimal>("ShipPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("StatusPayment")
                        .HasColumnType("bit");

                    b.Property<int>("TotalAmountItem")
                        .HasColumnType("int");

                    b.Property<int>("TotalPoint")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TypeAddressID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderCode");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TDTSettingTable.OrdersDetail", b =>
                {
                    b.Property<Guid>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Nvarchar(200)");

                    b.Property<string>("IssuingCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PairDiscountID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceSale")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PublishingCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantityDiscountID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quatity")
                        .HasColumnType("int");

                    b.Property<string>("SpecialDiscountID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StatusPairDiscount")
                        .HasColumnType("bit");

                    b.Property<bool?>("StatusQuatityDiscount")
                        .HasColumnType("bit");

                    b.HasKey("OrderDetailID");

                    b.ToTable("OrdersDetails");
                });

            modelBuilder.Entity("TDTSettingTable.PairDiscount", b =>
                {
                    b.Property<string>("PairDiscountID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContentLastUpdateDate")
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Expired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PercentReduction")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PairDiscountID");

                    b.ToTable("PairDiscounts");
                });

            modelBuilder.Entity("TDTSettingTable.PaymentMethods", b =>
                {
                    b.Property<string>("PaymentMethodID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Nvarchar(250)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LasUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentMethodID");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("TDTSettingTable.Productsviewedbycustomers", b =>
                {
                    b.Property<Guid>("ViewerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastDateViewer")
                        .HasColumnType("datetime2");

                    b.Property<int>("ViewerNumber")
                        .HasColumnType("int");

                    b.HasKey("ViewerID");

                    b.ToTable("Productsviewedbycustomers");
                });

            modelBuilder.Entity("TDTSettingTable.PublishingCompany", b =>
                {
                    b.Property<string>("PublishingCompanyID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<string>("ContentLastUpdateDate")
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<DateTime>("DateCraete")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfIncorporation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("Nvarchar(150)");

                    b.Property<DateTime?>("HeadquartersLastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublishingCompanyID");

                    b.ToTable("PublishingCompanys");
                });

            modelBuilder.Entity("TDTSettingTable.QuantityDiscount", b =>
                {
                    b.Property<string>("QuantityDiscountID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContentLastUpdateDate")
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Expired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PercentReduction")
                        .HasColumnType("int");

                    b.Property<int>("QuantityBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuantityDiscountID");

                    b.ToTable("QuantityDiscounts");
                });

            modelBuilder.Entity("TDTSettingTable.ReceiptPaymentOnline", b =>
                {
                    b.Property<Guid>("ReceiptPaymentOnlineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankCode")
                        .HasMaxLength(150)
                        .HasColumnType("Nvarchar(150)");

                    b.Property<string>("BankPayment")
                        .HasMaxLength(200)
                        .HasColumnType("Nvarchar(200)");

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("Nvarchar(500)");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Nvarchar(200)");

                    b.Property<TimeSpan>("TimeCreate")
                        .HasColumnType("time");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("TransactionExecutionTime")
                        .HasColumnType("time");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("Nvarchar(MAX)");

                    b.Property<string>("vnPayResponseCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ReceiptPaymentOnlineID");

                    b.ToTable("ReceiptPaymentOnlines");
                });

            modelBuilder.Entity("TDTSettingTable.ReceiptStatus", b =>
                {
                    b.Property<string>("ReceiptStatusID")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("Nvarchar(10)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDStep1")
                        .HasColumnType("int");

                    b.Property<int>("IDStep2")
                        .HasColumnType("int");

                    b.Property<int>("IDStep3")
                        .HasColumnType("int");

                    b.Property<int>("IDStep4")
                        .HasColumnType("int");

                    b.Property<int>("IDStep5")
                        .HasColumnType("int");

                    b.Property<int>("IDStep6")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LasUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethodID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Step1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Step2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Step3")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Step4")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Step5")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("Step6")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar(100)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReceiptStatusID");

                    b.ToTable("ReceiptStatus");
                });

            modelBuilder.Entity("TDTSettingTable.Role", b =>
                {
                    b.Property<string>("RoleID")
                        .HasMaxLength(10)
                        .HasColumnType("Nvarchar(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentLastUpdateDate")
                        .HasMaxLength(250)
                        .HasColumnType("Nvarchar(250)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("Nvarchar(150)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TDTSettingTable.SatisfactionLevel", b =>
                {
                    b.Property<string>("SatisfactionLevelID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeelLever")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReviewID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("StartReivew")
                        .HasColumnType("bit");

                    b.HasKey("SatisfactionLevelID");

                    b.ToTable("SatisfactionLevels");
                });

            modelBuilder.Entity("TDTSettingTable.SpecialDiscount", b =>
                {
                    b.Property<string>("SpecialDiscountID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ContentLastUpdateDate")
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Expired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PercentReduction")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpecialDiscountID");

                    b.ToTable("SpecialDiscounts");
                });

            modelBuilder.Entity("TDTSettingTable.TypeAddress", b =>
                {
                    b.Property<string>("TypeAddressID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DateTimeCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeAddressID");

                    b.ToTable("TypeAddress");

                    b.HasData(
                        new
                        {
                            TypeAddressID = "0001",
                            DateTimeCreate = new DateTime(2023, 6, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Nhà riêng",
                            IsDeleteFlag = false
                        },
                        new
                        {
                            TypeAddressID = "0002",
                            DateTimeCreate = new DateTime(2023, 6, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Văn phòng",
                            IsDeleteFlag = false
                        },
                        new
                        {
                            TypeAddressID = "0003",
                            DateTimeCreate = new DateTime(2023, 6, 26, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Công ty",
                            IsDeleteFlag = false
                        });
                });

            modelBuilder.Entity("TDTSettingTable.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AddressCurent")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("CityID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateCreate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailAddress")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("Nvarchar(300)");

                    b.Property<string>("DistrictID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.Property<string>("FistName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.Property<string>("GenderID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarriageID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("level")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("Nvarchar(150)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TDTSettingTable.UserAccount", b =>
                {
                    b.Property<string>("UserID")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActiver")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool?>("RemmenberAccount")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Nvarchar(50)");

                    b.HasKey("UserID");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("TDTSettingTable.UserRole", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContentLastUpdateDtae")
                        .HasMaxLength(250)
                        .HasColumnType("Nvarchar(250)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Delegator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleteFlag")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("Nvarchar(10)");

                    b.HasKey("UserID");

                    b.ToTable("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
